
services:
  nginx:
    image: nginx:latest
    container_name: nginx_frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      #- ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - orchestator
      #- inventory
    networks:
      - app_network

  orchestator:
    build: ./orchestator_ms
    ports:
      - "8080:8080"
    container_name: orchestator_ms
    environment:
      - PG_USER=app_user
      - PG_PASSWORD=app_password
      - PG_HOST=postgres_db
      - PG_PORT=5432
      - PG_DATABASE=almuerzos_db
      - RABBITMQ_URL=amqp://rabbitmq
      - QUEUE_ESTADO_ORDEN=estado.orden.qu
      - EXCHANGE_NUEVA_ORDEN=nueva.orden.ex
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app_network

  #kitchen-manage:
    #build: ./kitchen_manage_ms
    #container_name: ms_kitchen
    #environment:
      #- RABBITMQ_URL=amqp://rabbitmq
      #- DB_HOST=postgres
    #depends_on:
      #- rabbitmq
      #- postgres
    #networks:
      #- app_network

  #inventory:
    #build: ./inventory_ms
    #container_name: ms_inventory
    #environment:
      #- DB_HOST=postgres
    #depends_on:
      #- postgres
    #networks:
      #- app_network

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
      POSTGRES_DB: almuerzos_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      #- ./data:/var/lib/rabbitmq:rw
      - ./definitions.json:/etc/rabbitmq/definitions.json:ro 
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro  
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
      - RABBITMQ_LOAD_DEFINITIONS=true
      - RABBITMQ_DEFINITIONS_FILE=/etc/rabbitmq/definitions.json  
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
