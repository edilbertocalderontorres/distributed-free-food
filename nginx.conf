version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx_frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - orchestrator
      - inventory
    networks:
      - app_network

  orchestrator:
    build: ./orchestrator
    container_name: ms_orchestrator
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
      - DB_HOST=postgres
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app_network

  cooking:
    build: ./cooking
    container_name: ms_cooking
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
      - DB_HOST=postgres
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app_network

  inventory:
    build: ./inventory
    container_name: ms_inventory
    environment:
      - DB_HOST=postgres
    depends_on:
      - postgres
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: restaurant_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./definitions.json:/etc/rabbitmq/definitions.json
    environment:
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
      - RABBITMQ_LOAD_DEFINITIONS=/etc/rabbitmq/definitions.json
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: